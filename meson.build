project('EcoRE', 'c')

eco_src = [
    './src/lib/lang/eco/parser/tokenizer.eco',
    './src/lib/lang/eco/parser/Parser/expressions.eco',
    './src/lib/lang/eco/parser/Parser/send.eco',
    './src/lib/lang/eco/parser/Parser/objects/molecule.eco',
    './src/lib/lang/eco/parser/Parser/objects/interface.eco',
    './src/lib/lang/eco/parser/Parser/objects/simple.eco',
    './src/lib/lang/eco/parser/Parser/checks.eco',
    './src/lib/lang/eco/parser/Parser/charchecks.eco',
    './src/lib/lang/eco/parser/Parser/bars.eco',
    './src/lib/lang/eco/parser/Parser/args.eco',
    './src/lib/lang/eco/parser/Parser/compounds.eco',
    './src/lib/lang/eco/parser/Parser/optionals.eco',
    './src/lib/lang/eco/parser/shared.eco',
    './src/lib/lang/eco/parser/_.eco',
    './src/lib/lang/eco/compiler/scope.eco',
    './src/lib/lang/eco/compiler/regalloc.eco',
    './src/lib/lang/eco/compiler/value_type.eco',
    './src/lib/lang/eco/compiler/visitor.eco',
    './src/lib/lang/eco/compiler/codewriter.eco',
    './src/lib/lang/eco/compiler/compiler.eco',
    './src/lib/lang/eco/compiler/scoped_compiler.eco',
    './src/lib/lang/eco/compiler/_.eco',
    './src/lib/lang/eco/compiler/bytecodes.eco',
    './src/lib/lang/eco/ast/construction.eco',
    './src/lib/lang/eco/ast/ast.eco',
    './src/lib/lang/eco/ast/visitor.eco',
    './src/lib/lang/eco/_.eco',
    './src/lib/lang/_.eco',
    './src/lib/std/ffi/_.eco',
    './src/lib/std/util/map.eco',
    './src/lib/std/util/mutablepair.eco',
    './src/lib/std/util/collector.eco',
    './src/lib/std/util/vectors.eco',
    './src/lib/std/util/stack.eco',
    './src/lib/std/util/set.eco',
    './src/lib/std/util/range.eco',
    './src/lib/std/util/queue.eco',
    './src/lib/std/util/iterators/segmented/_.eco',
    './src/lib/std/util/iterators/_.eco',
    './src/lib/std/util/comparators/_.eco',
    './src/lib/std/util/_.eco',
    './src/lib/std/maybe.eco',
    './src/lib/std/bool.eco',
    './src/lib/std/clonable.eco',
    './src/lib/std/io/writer.eco',
    './src/lib/std/io/stringwriter.eco',
    './src/lib/std/io/portoutput.eco',
    './src/lib/std/io/portinput.eco',
    './src/lib/std/io/portio.eco',
    './src/lib/std/io/fdbytewriter.eco',
    './src/lib/std/io/fdbytereader.eco',
    './src/lib/std/io/filedescriptor.eco',
    './src/lib/std/io/_.eco',
    './src/lib/std/io/fdsegmentreader.eco',
    './src/lib/std/os/_.eco',
    './src/lib/std/os/files/_.eco',
    './src/lib/std/text/utf8/utf8iterator.eco',
    './src/lib/std/text/utf8/_.eco',
    './src/lib/std/text/writing/numberwriter.eco',
    './src/lib/std/text/writing/_.eco',
    './src/lib/std/text/parsing/number.eco',
    './src/lib/std/text/parsing/_.eco',
    './src/lib/std/text/_.eco',
    './src/lib/std/reflect/mirror.eco',
    './src/lib/std/reflect/proxies/key.eco',
    './src/lib/std/reflect/proxies/string.eco',
    './src/lib/std/reflect/proxies/type.eco',
    './src/lib/std/reflect/proxies/int.eco',
    './src/lib/std/reflect/proxies/ffi/ffitype.eco',
    './src/lib/std/reflect/proxies/ffi/ffifunc.eco',
    './src/lib/std/reflect/proxies/ffi/ffiobject.eco',
    './src/lib/std/reflect/proxies/ffi/ffilib.eco',
    './src/lib/std/reflect/proxies/array.eco',
    './src/lib/std/reflect/proxies/char.eco',
    './src/lib/std/reflect/proxies/code.eco',
    './src/lib/std/reflect/proxies/blob.eco',
    './src/lib/std/reflect/proxies/block.eco',
    './src/lib/std/reflect/proxies/float.eco',
    './src/lib/std/reflect/proxies/interface.eco',
    './src/lib/std/reflect/proxies/_.eco',
    './src/lib/std/reflect/slot.eco',
    './src/lib/std/reflect/_.eco',
    './src/lib/std/try.eco',
    './src/lib/std/singleton.eco',
    './src/lib/std/module.eco',
    './src/lib/std/modules.eco',
    './src/lib/std/defaultbehavior.eco',
    './src/lib/std/globals.eco',
    './src/lib/std/_.eco',
    './src/lib/interfaces.eco',
    './src/lib/master.eco'
]

eco_src_with_path = []

foreach file : eco_src
    eco_src_with_path += files(join_paths(meson.current_source_dir(), file))
endforeach

prog_python = import('python').find_installation('python3')

eco_target = custom_target('image.c',
                           output: 'image.c',
                           input: ['./src/bootstrapper/ecosphere/bootstrapper.py'],
                           command: [prog_python, '@INPUT@', '@OUTPUT@', eco_src_with_path],
                           env: ['PYTHONPATH=' + meson.current_source_dir() + '/src/bootstrapper/']
             )

src = [
    eco_target,
    './src/ecore/util/memory.c',
    './src/ecore/util/utf8.c',
    './src/ecore/util/libc.c',
    './src/ecore/util/gz.c',
    './src/ecore/util/dwarf/dwarf.c',
    './src/ecore/objects/misc/key/key.c',
    './src/ecore/objects/misc/blob/blob.c',
    './src/ecore/objects/misc/string/string.c',
    './src/ecore/objects/misc/array/array.c',
    './src/ecore/objects/pseudo/float.c',
    './src/ecore/objects/pseudo/character.c',
    './src/ecore/objects/pseudo/integer.c',
    './src/ecore/objects/vm/code/closure.c',
    './src/ecore/objects/vm/code/code.c',
    './src/ecore/objects/vm/interface/interface.c',
    './src/ecore/objects/vm/ffi/ffitype.c',
    './src/ecore/objects/vm/ffi/ffiobject.c',
    './src/ecore/objects/vm/ffi/ffifunc.c',
    './src/ecore/objects/vm/ffi/ffilib.c',
    './src/ecore/objects/objects.c',
    './src/ecore/objects/base/object/gc.c',
    './src/ecore/objects/base/object/send.c',
    './src/ecore/objects/base/object/object.c',
    './src/ecore/objects/base/type_transfer.c',
    './src/ecore/objects/base/type/typelist.c',
    './src/ecore/objects/base/type/typecore.c',
    './src/ecore/objects/base/type/slot_info.c',
    './src/ecore/objects/base/type/type.c',
    './src/ecore/objects/base/type/gc.c',
    './src/ecore/objects/base/type/interface.c',
    './src/ecore/objects/base/type/slot.c',
    './src/ecore/objects/base/type/copying.c',
    './src/ecore/objects/base/type/sending.c',
    './src/ecore/objects/base/molecule/object_payload.c',
    './src/ecore/objects/base/molecule/molecule.c',
    './src/ecore/objects/base/molecule/object_slots.c',
    './src/ecore/eco.c',
    './src/ecore/vm/fiber/gc.c',
    './src/ecore/vm/fiber/fiber.c',
    './src/ecore/vm/fiber/sched.c',
    './src/ecore/vm/fiber/stackops.c',
    './src/ecore/vm/core/interpreter.c',
    './src/ecore/vm/core/frame.c',
    './src/ecore/vm/core/send.c',
    './src/ecore/vm/core/clone.c',
    './src/ecore/vm/vm.c',
    './src/ecore/vm/memory/memory.c',
    './src/ecore/vm/memory/arena.c',
    './src/ecore/vm/memory/gc/gc_state.c',
    './src/ecore/vm/memory/gc/gc.c',
    './src/ecore/vm/scheduler.c',
    './src/ecore/vm/builtins/core/io.c',
    './src/ecore/vm/builtins/core/blob.c',
    './src/ecore/vm/builtins/core/flow.c',
    './src/ecore/vm/builtins/core/slots.c',
    './src/ecore/vm/builtins/core/ffi.c',
    './src/ecore/vm/builtins/core/math.c',
    './src/ecore/vm/builtins/core/string.c',
    './src/ecore/vm/builtins/core/code.c',
    './src/ecore/vm/builtins/core/array.c',
    './src/ecore/vm/builtins/core/reflection.c',
    './src/ecore/vm/builtins/core/is.c',
    './src/ecore/vm/builtins/core/clone.c',
    './src/ecore/vm/builtins/core/key.c',
    './src/ecore/vm/builtins/core/init.c',
    './src/ecore/vm/builtins/builtins.c',
    './src/ecore/main.c',
    './src/ecore/io/logging/log.c',
    './src/ecore/io/econnect/instance.c',
    './src/ecore/io/econnect/file/file.c',
    './src/ecore/io/econnect/reader/parser.c',
    './src/ecore/io/econnect/reader/callback.c',
    './src/ecore/io/econnect/reader/builtins/flow/flow.c',
    './src/ecore/io/econnect/reader/builtins/protocol/protocol.c',
    './src/ecore/io/econnect/reader/builtins/compression/gz.c',
    './src/ecore/io/econnect/reader/builtins/objects/string.c',
    './src/ecore/io/econnect/reader/builtins/objects/code.c',
    './src/ecore/io/econnect/reader/builtins/objects/array.c',
    './src/ecore/io/econnect/reader/builtins/objects/ints.c',
    './src/ecore/io/econnect/reader/builtins/objects/interface.c',
    './src/ecore/io/econnect/reader/builtins/objects/object_body.c',
    './src/ecore/io/econnect/reader/builtins/objects/object.c',
    './src/ecore/io/econnect/reader/builtins/objects/key.c',
    './src/ecore/io/econnect/reader/builtins/builtins.c',
    './src/ecore/io/econnect/reader/builtins/id/id.c',
    './src/ecore/io/econnect/reader/reader.c',
    './src/ecore/io/econnect/reader/result.c',
    './src/ecore/io/econnect/econnect.c'
]

includes = include_directories('src')

cc = meson.get_compiler('c')

math = cc.find_library('m')
dl = cc.find_library('dl')
zlib = dependency('zlib')
libffi = dependency('libffi')
# libdwarf = dependency('libdwarf')

executable('ecore.app', sources: src,
                        include_directories: includes,
                        dependencies: [math, dl, zlib, libffi],
                        c_args : [
                            '-DECO_CONFIG_COMPILE_WITH_INTEGRATED_BINARY',
                            '-DECO_CONFIG_MAKEFILE_ENABLE_LIBZ',
                            '-DECO_CONFIG_MAKEFILE_ENABLE_LIBFFI',
                            '-DECO_CONFIG_MAKEFILE_ENABLE_LIBDL'
                        ],
                        install: true)
