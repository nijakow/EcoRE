
#=std/util/Queue: {
    with inherited _ = #<:std/Clonable>;
    
    private elements;

    with inherited trait = {
        static with inherited _ = #<:std/Trait>;
        
        init => (
            elements <- std util newVector.
          ^ self
        );

        from: sequence => ( sequence do: [ :e | enqueue: e ]. ^ self);

        isEmpty => elements isEmpty;
        size => elements size;
        
        enqueue: e => elements append: e;
        dequeue => elements removeFirst;
        front => elements first;

        writeOn: w => w << 'a queue';
    };
}
