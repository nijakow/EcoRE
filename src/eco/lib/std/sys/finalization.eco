
#=std/sys/Finalization: {
    static with inherited _ = #<:std/Module>;

    own FinalizationProcess = {
        static with inherited _ = #<:std/Module>;

        Main => (
            [
                [ :break |
                    | obj <- #'ecosphere.ecore.next_finalizable_or'(0) |
                    (0 == obj)
                        if: [ break value  ]
                      else: [ obj finalize ].
                ] repeatWithBreak.
                #'ecosphere.ecore.fiber.yield'().
            ] repeat
        );
    };

    StartFinalizationProcess => (
        #'ecosphere.ecore.fiber.start'((std reflect Mirror: FinalizationProcess) slot: #'Main' ~ slotValue, lobby).
      ^ self
    );
}
