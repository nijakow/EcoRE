
#=std/DefaultBehavior: {
    protected with lobby = #<:lobby>;
    
    value         => self;
    mirror        => (std reflect Mirror) clone init: self;
    asBool        => true;
    is: other     => #'ecosphere.ecore.is'(self, other);
    equals: e     => is: e;
    == other      => is: other;
    != other      => (== other) not;

    let: block    => block value(self);
    inject: block => ( block value(self). self );

    & value       => (((std util Collector) clone) init: self) & value;
    ~> value      => ((std util MutablePair) clone) initWithFirst: self Second: value;

    throw         => #'ecosphere.ecore.flow.throw'(self);

    writeOn: writer => writer << 'an object';
    presentOn: presentationStream => writeOn: presentationStream;

    subclassResponsibility => std sys error ThrowMessage: 'This method is not implemented in this object.';
    todo => std sys error ThrowMessage: 'This method is not implemented yet (marked as TODO).';

    isBlock       => false;
    isCode        => false;
    isInt         => false;
    isChar        => false;
    isKey         => false;
    isString      => false;
    isArray       => false;

    finalize => self;
}
