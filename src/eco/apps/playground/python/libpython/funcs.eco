
{
    static with inherited _ = std Module;
    protected with libpython <- $package;

    IncRef: ptr => (lib Py_IncRef yes) value(ptr);
    DecRef: ptr => (lib Py_DecRef yes) value(ptr);

    IsNone: ptr => ((lib PyEco_IsNone yes) value(ptr)) != 0;

    TypeCheck: obj Against: type => ((lib PyEco_TypeCheck yes) value(obj, type)) != 0;

    IsType:    ptr => TypeCheck: ptr Against: (lib PyType_Type yes);
    IsModule:  ptr => TypeCheck: ptr Against: (lib PyModule_Type yes);
    IsUnicode: ptr => TypeCheck: ptr Against: (lib PyUnicode_Type yes);

    ImportModule: name => objects Object: ((lib PyImport_ImportModule yes) value(name));
    NewModule: name => objects Object: ((lib PyModule_New yes) value(name));

    NewUnicodeFromEcoString: string => (lib PyUnicode_FromString yes) value(string);
    UnicodeGrabString: unicode => (lib PyEco_PyUnicode_GrabString yes) value(unicode);

    RunSimpleString: string => (lib PyRun_SimpleString yes) value(string);
}
