
{
    static with inherited _ = std Module;

    own drawables = (here / 'drawables' / '_.eco') importIn: $;
    own morphs    = (here / 'morphs' / '_.eco') importIn: $;

    own Color <- $ gfx morphic misc color Color;

    own Canvas = (here / 'Canvas.eco') importIn: $;
    own CanvasRenderer = (here / 'CanvasRenderer.eco') importIn: $;
    own Turtle = (here / 'Turtle.eco') importIn: $;

    Test => (
        |
            c <- Canvas new,
            r <- CanvasRenderer new: c,
            t <- Turtle new: r
        |

        r setR: 255 G: 0 B: 0.

        t moveToX: 100 Y: 100.
        "1 to: 100 do: [ :i |
            t forward: (100).
            t right: 89.
        ]."
        t forward: 100.
        t left: 90.
        t forward: 100.
        t left: 90.
        t forward: 100.
        t left: 90.
        t forward: 100.

      ^ c
    );
}
