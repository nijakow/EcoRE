
{
    static with inherited _ = std Module;
    with app = $;

    own core     = (here / 'core' / '_.eco') importIn: self;
    own builders = (here / 'builders' / '_.eco') importIn: self;

    Create => (builders morph MorphBehaviorBuilder) New;

    Test => (
        |
            world  <- (core world) NewWorld,
            morph1 <- (Create ~ layouter: ((core layouting layouters) StackLayouter) ~ build link instantiate),
            morph2 <- (Create ~ renderFunction: $[ :morph :renderer | ] ~ build link instantiate),
        |

        world declareRoot: morph2.

        (morph2 structure) add: morph1.

      ^ world
    );
}
