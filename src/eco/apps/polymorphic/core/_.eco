
{
    static with inherited _ = std Module;

    own math = {
        static with inherited _ = std Module;
        protected polymorphic = $package;

        geometry => (polymorphic app math) geometry;
    };

    own events       = (here / 'events' / '_.eco') importIn: $package;
    own layouting    = (here / 'layouting' / '_.eco') importIn: $package;
    own rendering    = (here / 'rendering' / '_.eco') importIn: $package;
    own structure    = (here / 'structure' / '_.eco') importIn: $package;
    own world        = (here / 'world' / '_.eco') importIn: $package;

    own MorphActionNode = (here / 'MorphActionNode.eco') importIn: $package;
    own MorphState      = (here / 'MorphState.eco') importIn: $package;
    own MorphBehavior   = (here / 'MorphBehavior.eco') importIn: $package;
    own MorphKernel     = (here / 'MorphKernel.eco') importIn: $package;
    own MorphInstance   = (here / 'MorphInstance.eco') importIn: $package;
}
