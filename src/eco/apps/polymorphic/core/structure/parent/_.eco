
{
    static with inherited _ = std Module;

    own ParentTrait = {
        static with inherited _ = std Trait;

        hasParent => false;

        ifNoParent: aBlock => aBlock value;
        ifParent:   aBlock => self;

        world => subclassResponsibility;

        writeOn: w => w << 'a parent info object';
    };

    own NoParent = (here / 'NoParent.eco') importIn: self;
    own WorldParent = (here / 'WorldParent.eco') importIn: self;
    own RegularParent = (here / 'RegularParent.eco') importIn: self;

    RegularParent: morph => RegularParent clone initWithMorph: morph;
}
