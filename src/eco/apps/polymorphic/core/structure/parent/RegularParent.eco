
{
    static with inherited _ = std Classlike;

    own Instance = {
        static with inherited _ = std Clonable;

        morph;

        with inherited trait = {
            static with inherited _ = std Trait;
            with inherited ParentTrait = $package ParentTrait;

            initWithMorph: m => (
                morph <- m.
              ^ self
            );

            hasParent => true;

            ifNoParent: aBlock => self;
            ifParent:   aBlock => aBlock value(morph);

            world => (morph structure) world;

            replaceChild: aChild With: anotherChild => ((morph structure) childrenInfo) replaceChild: aChild With: anotherChild;
            removeChild: aChild => ((morph structure) childrenInfo) remove: aChild;

            writeOn: w => w << 'a regular polymorph parent(' << morph << ')';
        };
    };

    Parent: aMorph => (Instance clone) initWithMorph: aMorph;
}
