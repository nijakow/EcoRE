
{
    static with inherited _ = std Classlike;

    own Instance = {
        static with inherited _ = std Clonable;

        renderer;
        layouter;
        eventHandler;

        protected preferredHorizontalLayout,
        protected preferredVerticalLayout;

        with inherited trait = {
            static with inherited _ = std Trait;
            protected polymorphic = $package;

            init => (
                renderer <- (polymorphic core rendering) renderers Default.
                layouter <- (polymorphic core layouting) layouters Default.
                preferredHorizontalLayout <- No.
                preferredVerticalLayout   <- No.
              ^ self
            );

            renderer:     r => renderer     <- r;
            layouter:     l => layouter     <- l;
            eventHandler: e => eventHandler <- e;

            defaultHorizontalLayout => (
                preferredHorizontalLayout yes: [ :hl | ^ hl ].
              ^ (polymorphic core layouting) layouts Default
            );

            defaultVerticalLayout => (
                preferredVerticalLayout yes: [ :vl | ^ vl ].
              ^ (polymorphic core layouting) layouts Default
            );

            horizontalLayout: l => preferredHorizontalLayout <- Yes: l;
            verticalLayout:   l => preferredVerticalLayout   <- Yes: l;

            wrapSeed: seed Morph: morph => No;

            link: seed => ((polymorphic core) MorphKernel) Behavior: self Seed: seed;
            link       => ((polymorphic core) MorphKernel) Behavior: self;

            writeOn: w => w << 'a polymorph behavior';
        };
    };

    New => Instance new;
}
