
{
    static with inherited _ = std Classlike;
    protected polymorphic = $package;

    own Instance = {
        static with inherited _ = std Clonable;

        structure,
        actions,
        kernel;

        with inherited trait = {
            static with inherited _ = std Trait;
            protected polymorphic = $package;

            initWithKernel: _kernel => (
                structure <- (polymorphic core structure) MorphStructureNode NewForMorph: self Behavior: (_kernel behavior).
                actions   <- (polymorphic core) MorphActionNode NewForMorph: self.
                kernel    <- _kernel.
              ^ self
            );

            behavior => kernel behavior;
            state    => kernel seed;
            seed     => kernel seed;

            writeOn: w => w << 'a polymorph';
        };
    };

    Kernel:   kernel               => (Instance clone) initWithKernel: kernel;
    
    Behavior: behavior             => Kernel: ((polymorphic core) MorphKernel Behavior: behavior);
    Behavior: behavior Seed: seed  => Kernel: ((polymorphic core) MorphKernel Behavior: behavior Seed: seed);
}
