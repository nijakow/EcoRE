
{
    static with inherited _ = std Classlike;

    own Instance = {
        static with inherited _ = std Clonable;

        behavior,
        seed <- No;

        with inherited trait = {
            static with inherited _ = std Trait;
            protected polymorphic = $package;

            initWithBehavior: _behavior Seed: _seed => (
                behavior <- _behavior.
                seed     <- Yes: _seed.
              ^ self
            );

            initWithBehavior: _behavior => (
                behavior <- _behavior.
                seed     <- No.
              ^ self
            );

            instantiate => ((polymorphic core) MorphInstance) Kernel: self;

            writeOn: w => w << 'a morph kernel(' << seed << ')';
        };
    };

    Behavior: behavior Seed: seed => (Instance clone) initWithBehavior: behavior Seed: seed;
    Behavior: behavior            => (Instance clone) initWithBehavior: behavior;
}
