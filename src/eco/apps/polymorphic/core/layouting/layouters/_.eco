
{
    static with inherited _ = std Module;
    polymorphic = $package;

    own LayouterTrait = {
        static with inherited _ = std Trait;
        protected polymorphic = $package;
        protected math => (polymorphic core) math;
        protected Point => (math geometry) Point;

        baseMinWidthForMorph: morph => 0;
        baseMinHeightForMorph: morph => 0;

        baseMinSizeForMorph: morph Orientation: orientation => orientation selectX: (minWidthForMorph: morph) Y: (minHeightForMorph: morph);

        minSizeForMorph: morph Orientation: orientation => (
            (morph structure) layoutForOrientation: orientation
              ~ ifShrinkWrap: [           ^ baseMinSizeForMorph: morph Orientation: orientation ]
                ifFlexible:   [           ^ baseMinSizeForMorph: morph Orientation: orientation ]
                ifRigid:      [ :extent | ^ extent                                              ]
        );

        preferredSizeForMorph: morph Orientation: orientation Constraint: constraint => (
            (morph structure) layoutForOrientation: orientation
              ~ ifShrinkWrap: [           ^ baseMinSizeForMorph: morph Orientation: orientation ]
                ifFlexible:   [           ^ constraint                                          ]
                ifRigid:      [ :extent | ^ extent                                              ]
        );

        preferredSizeForMorph: morph Constraints: constraints => (
            Point X: (preferredSizeForMorph: morph Orientation: ((math geometry) orientation Horizontal) Constraint: (constraints x))
                  Y: (preferredSizeForMorph: morph Orientation: ((math geometry) orientation Vertical)   Constraint: (constraints y))
        );

        layoutChildrenOfMorph: morph Constraints: constraints => subclassResponsibility;
        layoutMorph: morph Constraints: constraints => (
            (std io out << 'Before!') newline commit.
            | preferredConstraints <- preferredSizeForMorph: morph Constraints: constraints |
            (std io out << 'After!') newline commit.

            layoutChildrenOfMorph: morph Constraints: preferredConstraints.

            (std io out << 'After 2!') newline commit.

            (morph structure) resizeTo: preferredConstraints.
        );

        writeOn: w => w << 'a layouter';
    };

    own FlexLayouter  = (here / 'FlexLayouter.eco') importIn: self;
    own StackLayouter = (here / 'StackLayouter.eco') importIn: self;

    Default => StackLayouter New;
}
