
{
    static with inherited _ = std Classlike;

    own Instance = {
        static with inherited _ = std Clonable;

        behavior,
        seed,
        protected constructor;

        with inherited trait = {
            static with inherited _ = std Trait;
            protected polymorphic = $package;

            initWithBehavior: _behavior Seed: _seed => (
                behavior    <- _behavior.
                seed        <- _seed.
                constructor <- (_behavior constructorClass) New.
              ^ self
            );

            initWithBehavior: _behavior => initWithBehavior: _behavior Seed: self;

            configure: aBlock => (
                aBlock value(constructor).
              ^ self
            );

            instantiate => (
                |
                    instance <- ((polymorphic core) MorphInstance) Kernel: self
                |
                
                constructor constructMorph: instance.

              ^ instance
            );

            writeOn: w => w << 'a morph kernel';
        };
    };

    Behavior: behavior Seed: seed => (Instance clone) initWithBehavior: behavior Seed: seed;
    Behavior: behavior            => (Instance clone) initWithBehavior: behavior;
}
