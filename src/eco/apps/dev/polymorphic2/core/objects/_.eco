
std Module
{
    DrawObject :: Trait {
        protected polymorphic = $package;

        catches: aPoint => false;

        bounds    => subclassResponsibility;

        emitOnStream: stream => stream emitDrawable: self;
        emitOnGraphics: graphics At: offset => graphics at: offset PutDrawable: self;
        emitOnGraphics: graphics In: bounds => graphics in: bounds PutDrawable: self;

        renderAt: offset On: renderer => self;
    };

    Line         :: (here / 'Line.eco') importIn: (self DrawObject);
    FilledCircle :: (here / 'FilledCircle.eco') importIn: (self DrawObject);
    Rectangle    :: (here / 'Rectangle.eco') importIn: (self DrawObject);
    Text         :: (here / 'Text.eco') importIn: (self DrawObject);
}
