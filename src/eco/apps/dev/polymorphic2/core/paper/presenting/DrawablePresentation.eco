
{
    isa std Classlike;

    Instance :: Clonable
    {
        |
            bounds,
            offset,
            object
        |

        {
            with inherited Presentation <- $package;

            bounds: b object: obj => (
                offset <- b origin.
                bounds <- b.
                object <- obj.
              ^ self
            );

            offset: o object: obj => (
                offset <- o.
                bounds <- (obj bounds) translateBy: offset.
                object <- obj.
              ^ self
            );

            connectToParentNode: node => self;
            disconnectFromParentNode  => self;

            renderOn: renderer => object renderAt: offset On: renderer;

            writeOn: w => w << 'a drawable presentation';
        }
    };

    Object: object Bounds: bounds  => (Instance clone) bounds: bounds object: object;
    Object: object Offset: offset  => (Instance clone) offset: offset object: object;
}
