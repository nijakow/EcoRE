
{
    isa std Classlike;

    Instance :: Clonable
    {
        |
            presenter,
            dispatcher
        |
        
        {
            protected polymorphic <- $package;

            init => (
                presenter  <- ((polymorphic core morph) behavior presenting) DefaultPresenter.
                dispatcher <- (((polymorphic core world) event handling) Dispatcher) New.
              ^ self
            );

            presenter: p => presenter <- p;

            linkWithState: state => ((polymorphic core morph) Kernel) Behavior: self State: state;

            link: payload => linkWithState: (((polymorphic core morph) State) Payload: payload);
            link          => linkWithState: (((polymorphic core morph) State) New);

            writeOn: w => w << 'a morph behavior';
        }
    };

    New => Instance new;
}
