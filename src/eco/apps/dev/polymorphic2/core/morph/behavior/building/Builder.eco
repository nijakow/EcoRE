
{
    isa std Classlike;

    Instance :: Clonable
    {
        |
            protected behavior
        |

        {
            protected polymorphic <- $package;

            init => (
                behavior <- ((polymorphic core morph) Behavior) New.
              ^ self
            );

            on: predicate do: handlerFunction => (
                |
                    rule <- ((polymorphic core event) handling BasicRule)
                                Predicate: predicate
                                  Handler: handlerFunction
                |
                (behavior dispatcher) addRule: rule.
              ^ self
            );

            presenter: p => (
                behavior presenter: p.
              ^ self
            );

            presenterFunction: f => presenter: ((((polymorphic core morph) behavior presenting) FunctionPresenter) Function: f);

            caching: bool => (
                behavior caching: bool.
              ^ self
            );

            disableCaching => caching: false;

            build => behavior;

            writeOn: w => w << 'a behavior builder';
        }
    };

    new => Instance new;
}
