
{
    isa std Classlike;

    Instance :: Clonable
    {
        |
            behavior,
            state
        |
        
        {
            initWithBehavior: b State: s => (
                behavior <- b.
                state <- s.
              ^ self
            );

            emitOnStream: stream => stream emitMorphKernel: self;
            emitOnGraphics: graphics At: offset => graphics at: offset PutMorph: self;
            emitOnGraphics: graphics In: bounds => graphics in: bounds PutMorph: self;

            writeOn: w => w << 'a morph kernel';
        }
    };

    Behavior: behavior State: state => (Instance new) initWithBehavior: behavior State: state;
}
