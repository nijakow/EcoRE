
{
    isa std Classlike;

    Instance :: Clonable
    {
        |
            parent <- No,
            morph
        |

        {
            initWithMorph: m => (
                parent <- No.
                morph  <- m.
              ^ self
            );

            world => (parent) yes: [ :p | ^ p world ] no: [ ^ No ];

            reparent: p => parent <- Yes: p;
            disconnect  => parent <- No;

            writeOn: w => (
                w << 'a morph node'.
                parent yes: [ :p |
                    w << ' (parent is ' << p << ')'.
                ].
            );
        }
    };

    Morph: morph => (Instance clone) initWithMorph: morph;
}
