
{
    isa std Classlike;

    Instance :: Clonable
    {
        |
            objectMirror,
            openShells,
            maybeMorph,
        |

        {
            protected ui <- ($package modules polymorphic) ui;

            initWithMirror: mirror => (
                objectMirror <- mirror.
                openShells   <- std util newVector.
                maybeMorph   <- No.
              ^ self
            );

            build => (
                maybeMorph <- Yes: (
                    ui Framed(ui Label: 'A view') ~ xLayoutFlexible!
                ).
              ^ self
            );

            morph => (
                maybeMorph no: [ build ].
              ^ maybeMorph yes
            );

            writeOn: w => w << 'a browser view';
        }
    };

    Mirror: mirror => (Instance clone) initWithMirror: mirror;
}
