
{
    isa std Classlike;

    Instance :: Clonable
    {
        |
            bounds,
            offset,
            translatedBounds,
        |

        {
            protected polymorphic <- $package;

            initWithBounds: b Offset: o => (
                bounds           <- b.
                offset           <- o.
                translatedBounds <- bounds translateBy: offset.
              ^ self
            );

            initWithBounds: bounds => initWithBounds: bounds Offset: ((polymorphic math geometry) Point Origin);
            initWithExtent: extent => initWithBounds: (((polymorphic math geometry) Point Origin) extent: extent);

            equalsBoundsInfo: other => (
              ^ [ offset equalsPoint: other offset ] and: [ bounds equalsRectangle: other bounds ]
            );

            extent => bounds extent;

            writeOn: w => w << 'a bounds info instance';
        }
    };

    Bounds: bounds Offset: offset => (Instance clone) initWithBounds: bounds Offset: offset;
    Bounds: bounds                => (Instance clone) initWithBounds: bounds;
    Extent: extent                => (Instance clone) initWithExtent: extent;
}
