
{
    isa std Classlike;

    Instance :: Clonable
    {
        with inherited DrawObject <- $package;
        
        |
            bounds,
            text,
            color,
        |

        {
            initWithCaption: caption Color: _color => (
                text   <- (polymorphic gfx eve) Text: caption.
                bounds <- (polymorphic math geometry Rectangle) X: 0 Y: 0 W: (text width) H: (text height).
                color  <- _color.
              ^ self
            );

            initWithCaption: caption => initWithCaption: caption Color: ((polymorphic color colors) Gray);

            catches: aPoint => bounds containsPoint: aPoint;

            renderAt: offset On: renderer => (
                color onRenderer: renderer.
                renderer drawText: text X: (offset x) Y: (offset y).
              ^ self
            );

            writeOn: w => w << 'some text';
        }
    };

    Caption: caption Color: color => (Instance clone) initWithCaption: caption Color: color;
    Caption: caption              => (Instance clone) initWithCaption: caption;
}
