
{
    isa std Classlike;

    Instance :: Clonable
    {
        |
            rules
        |

        {
            protected polymorphic <- $package;

            init => (
                rules <- std util newVector.
              ^ self
            );

            addRule: rule => (
                rules add: rule.
              ^ self
            );

            handle: event context: context => (
                rules do: [ :rule |
                  [ :break |
                    rule
                        runWithEvent: event
                             Context: context
                           OnSuccess: [ :v | ^ (((polymorphic core event) handling) results Success) Value: v ]
                           OnFailure: break
                  ] withBreak
                ].
              ^ ((polymorphic core event) handling) results Failure
            );

            writeOn: w => w << 'an event dispatcher';
        }
    };

    New => Instance new;
}
