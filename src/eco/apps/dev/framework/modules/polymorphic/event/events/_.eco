
std Module
{
    protected polymorphic <- $package;

    protected Head: head Body: body => (
      ^ ((polymorphic core event) handling BasicEvent)
                Head: head
                Body: body
    );

    types => (polymorphic event) types;
    bodies :: (here / 'bodies' / '_.eco') importIn: $package;

    AddMorph: morph => Head: (types AddMorph)  Body: morph;

    DropMorph: morph Displacement: displacement => Head: (types DropMorph) Body: ((bodies DropMorph) Morph: morph Displacement: displacement);

    MouseClick: info Hand: hand => Head: (types MouseClick) Body: ((bodies MouseClick) Info: info Hand: hand);

    Key:      key Hand: hand => Head: (types Key) Body: ((bodies Key) Hand: hand Key: key);
    KeyPress: key Hand: hand => Key: key Hand: hand;
}
