
{
    static with inherited _ = std Module;

    own CastError = {
        static with inherited _ = std Singleton;
        with inherited ErrorTrait = std sys error ErrorTrait;

        writeOn: w => w << 'a cast error';
    };

    own TypeTrait = {
        static with inherited _ = std Trait;
        protected types = $;

        protected castFailed => (types CastError) throw;

        cast: element => element;

        writeOn: w => w << 'a type';
    };

    own EmptyType = {
        static with inherited _ = std Singleton;
        with inherited TypeTrait = $ TypeTrait;

        cast: element => castFailed;

        writeOn: w => w << 'the empty type';
    };

    own UniversalType = {
        static with inherited _ = std Singleton;
        with inherited TypeTrait = $ TypeTrait;

        cast: element => element;

        writeOn: w => w << 'the universal type';
    };
}
