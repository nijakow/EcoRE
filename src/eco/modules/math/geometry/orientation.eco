
{
    static with inherited _ = std Module;

    own Horizontal = {
        static with inherited _ = std Singleton;
        private module = $;

        isHorizontal => true;
        isVertical   => false;

        ifHorizontal: block => block value;
        ifVertical:   block => self;
        ifHorizontal: horiz
          ifVertical: verti => horiz value;
        
        opposite => module Vertical;

        selectX: x Y: y => x;

        writeOn: w => w << 'the horizontal orientation';
    };
    
    own Vertical = {
        static with inherited _ = std Singleton;
        private module = $;

        isHorizontal => false;
        isVertical   => true;

        ifHorizontal: block => self;
        ifVertical:   block => block value;
        ifHorizontal: horiz
          ifVertical: verti => verti value;
        
        opposite => module Horizontal;

        selectX: x Y: y => y;

        writeOn: w => w << 'the vertical orientation';
    };
}
