{
    static with inherited _ = std Clonable;
    protected sdl = $ sdl;

    text, font, width, height;

    with inherited trait = {
        static with inherited _ = std Trait;

        initWithText: _text Font: _font => (
            text   <- _text;
            font   <- _font;
            width  <- sdl SizeUTF8_W(font, text);
            height <- sdl SizeUTF8_H(font, text);
          ^ self
        );

        characterIndexAtX: offset => (
            |
                str   <- (std io StringWriter) new,
                index <- 0
            |
            text do: [ :c |
                str << c.
                (sdl SizeUTF8_W(font, str build) >= offset) if: [ ^ index ].
                index <- index + 1.
            ].
          ^ index
        );

        pointAtCharacterIndex: index => (
            | str <- text substringTo: index |
          ^ sdl SizeUTF8_W(font, str)
        );

        writeOn: w => w << 'an sdl text object';
    };
}
