
{
    static with inherited _ = std Module;

    sdl = (here / 'sdl.eco') importIn: self;

    Init => (
        sdl Init.
      ^ self
    );

    NewWindowWithTitle: title X: x Y: y W: w H: h => (Window clone) initWithHandle: (sdl CreateWindow(title, x, y, w, h, 0)) Width: w Height: h;
    NewEvent => (Event clone) init: sdl SDL_Event alloc;

    own Window = (here / 'Window.eco') importIn: self;

    own Renderer = (here / 'Renderer.eco') importIn: self;

    own Texture = (here / 'Texture.eco') importIn: self;

    own EventVisitor = (here / 'EventVisitor.eco') importIn: self;

    own Event = (here / 'Event.eco') importIn: self;

    own Program = (here / 'Program.eco') importIn: self;

    own Color = (here / 'Color.eco') importIn: self;
}
