
{
    static with inherited _ = std Clonable;
    
    protected items;

    with inherited trait = {
        static with inherited _ = std Trait;

        protected framework = $package;

        init => (
            items <- std util newVector.
          ^ self
        );

        item: name does: action => (
            items add: (std util newPair(name, action)).
          ^ self
        );

        buildUsingUiToolkit: ui => (
            |
                draggable <- (ui morphic morphs DraggableMorph) new,
                vbox      <- ui VBox(),
                height    <- 20
            |

            items do: [ :item |
                vbox add: (
                    "
                        TODO: When selecting an action, the menu should close...
                    "
                    ui Button(ui Padding(5, ui Label: (item first)),
                        $[ :(morph, func) ... |
                            morph unlink.
                            func value(...)
                         ] bind(draggable, item second)
                    ) ~ xLayout: ui layouts Flexible
                      ~ yLayout: ui layouts Flexible
                ).

                height <- height + 35.
            ].

            vbox add: (
                ui ButtonWithColor(ui SpacerW: 10 H: 10,
                                   ui morphic R: 255 G: 136 B: 0,
                    $[ :(morph) ... |
                        morph unlink.
                     ] bind(draggable)
                ) ~ xLayout: ui layouts Flexible
                  ~ yLayout: ui layouts ShrinkWrap
            ).

            draggable add: (
                ui Stacked(
                    ui Padding(10,
                        ui Stacked(
                            vbox,
                            ui BackgroundColorMorph
                        ),
                    ),
                    ui BrightBackgroundColorMorph
                )
            ).

            draggable
                ~ rigidWidth: 250
                ~ rigidHeight: height.

          ^ draggable
        );
    };
}
