{
    static with inherited _ = std Module;
    framework = $;

    own open = {
        static with inherited _ = std Module;
        static framework = $package;

        Morph: morph => (
            (framework context DefaultWorld)
                  open: morph.
          ^ self
        );

        Morph: morph At: offset => (
            (framework context DefaultWorld)
                  open: morph
                    at: offset.
          ^ self
        );

        OutlinerForObject: object => (
            (framework actions open) Morph: ((framework legacy MirrorBuilder) WindowFor: object)
        );

        Path: path => (
            (framework actions open) Morph: ((framework legacy MirrorBuilder) OutlinerWindowForPath: path)
        );

        own tools = {
            static with inherited _ = std Module;
            static framework = $package;

            Shell => (
                (framework actions open) Morph: ((framework legacy MirrorBuilder) ShellWindow)
            );
        };

        own ui = {
            static with inherited _ = std Module;
            static framework = $package;

            Build: block => (
                block value(framework ui builder)
            );

            BuildAndOpen: block => (
                (framework actions open) Morph: (Build: block)
            );

            BuildAndOpen: block At: offset => (
                (framework actions open) Morph: (Build: block) At: offset
            );

            BuildAndOpenContextMenu: block => (
                BuildAndOpen: [ :ui |
                    | cmb <- (framework utility ContextMenuBuilder) new |
                    
                    block value(cmb, ui).
                    
                    cmb buildUsingUiToolkit: ui
                ] At: ((framework context DefaultHand) globalOffset)
            );

            TextMessageBox: text => (
                (framework actions open) Morph: ((framework legacy MirrorBuilder) TextMessageBox: text)
            );
        };
    };

    own eval = {
        static with inherited _ = std Module;
        static framework = $package;

        DocumentAndShowResult: document Environment: environment => (
            (framework legacy MirrorBuilder)
                  RunDocumentAndShowResult: document
                                     World: (framework context DefaultWorld)
                               Environment: environment
        );

        StringAndShowResult: string Environment: environment => (
            (framework legacy MirrorBuilder)
                  RunStringAndShowResult: string
                                   World: (framework context DefaultWorld)
                             Environment: environment
        );
    }
}
