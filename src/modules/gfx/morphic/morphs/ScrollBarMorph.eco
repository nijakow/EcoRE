
{
    static with inherited _ = std Clonable;
    with inherited own Morph = $ Morph;

    position <- 0.0;
    notifyTo <- No;

    with inherited trait = {
        init => (
            $(Morph) initWithNoChildren.
            rigidWidth: 10.
          ^ self
        );

        position: p => (
            (p < 0.0) if: [ p <- 0.0 ].
            (p > 1.0) if: [ p <- 1.0 ].
            position <- p;
            renderDirty.
            notifyTo yes: [ :n | n scrollY: p ].
          ^ self
        );

        notifyTo: n => (
            notifyTo <- Yes: n.
          ^ self
        );

        renderImplOn: renderer => (
            renderer setR: 0 G: 120 B: 136.
            renderer drawRectX: 0 Y: 0 W: width H: height.
            renderer fillRectX: 2 Y: ((((height - 10) * position) asInt) + 2) W: (width - 4) H: 8.
            $(Morph) renderImplOn: renderer.
        );

        handleClick: click At: point HandMorph: hand => (
            position: (point y asFloat / height).
          ^ true
        );

        handleKey: key At: point HandMorph: hand => (
            key ifScrollUp:   [ position: position - 0.1. ^ true ].
            key ifScrollDown: [ position: position + 0.1. ^ true ].
          ^ false
        );

        writeOn: w => w << 'a scroll morph';
    };
}
