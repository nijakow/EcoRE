
{
    static with inherited _ = std Clonable;
    with inherited own Morph = $ Morph;

    with inherited trait = {
        morphic => $(Morph) morphic;

        init => (
            $(Morph) initWithOneChild.
          ^ self
        );

        updateMinSizeCaches => (
            | w <- 0, h <- 0 |
            childrenDo: [ :m |
                w <- w max: m minWidth.
                h <- h max: m minHeight.
            ].
            cachedMinWidth: w.
            cachedMinHeight: h.
        );

        layoutInPlace => (
            shrinkToFit.
            | r <- bounds |
            childrenDo: [ :c |
                |
                    w <- (r w) min: ((c xLayout isFlexible) if: [ r w ] else: [ c minWidth  ]),
                    h <- (r h) min: ((c yLayout isFlexible) if: [ r h ] else: [ c minHeight ])
                |
                c boundsX: 0 Y: 0 W: w H: h.
            ].
            childrenDo: [ :c | c layoutInPlaceIfNeeded ].
            layoutIsNowOkay.
        );

        renderOn: renderer => (
            renderer setR: 40 G: 255 B: 40.
            renderer drawRectX: 0 Y: 0 W: bounds w H: bounds h.
            renderer withPushedClips: (bounds offsetByX: (bounds x negate) Y: (bounds y negate)) Do: [
                $(Morph) renderOn: renderer.
            ].
        );

        "handleDropMorph: morph AtX: x Y: y => ( add: morph. ^ true );"

        writeOn: w => w << 'a clip morph';
    };
}
