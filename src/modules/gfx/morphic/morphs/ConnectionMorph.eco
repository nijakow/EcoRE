
{
    static with inherited _ = std Clonable;
    with inherited own Morph = $ Morph;

    targetMorph <- No;

    with inherited trait = {
        morphic => $(Morph) morphic;

        init => (
            $(Morph) initWithNoChildren.
          ^ self
        );

        connectTo: morph => targetMorph <- (Yes: morph);
        disconnect => targetMorph <- No;

        renderImplOn: renderer => (
            targetMorph yes: [ :tm |
                |
                    x <- globalOffset x,
                    y <- globalOffset y,
                    cx <- x + (width / 2),
                    cy <- y + (height / 2),
                    tx <- (tm globalOffset x),
                    ty <- (tm globalOffset y),
                    ax <- (cx < tx) if: [ tx ] else: [ (cx > (tx + tm width)) if: [ tx + tm width ] else: [ cx ] ],
                    ay <- (cy < ty) if: [ ty ] else: [ (cy > (ty + tm height)) if: [ ty + tm height ] else: [ cy ] ],
                |
                renderer setR: 0 G: 120 B: 136.
                "TODO: Maybe undo clipping here?"
                renderer drawArrowX: (width / 2) Y: (height / 2) X: (ax - x) Y: (ay - y).
            ].
            $(Morph) renderImplOn: renderer.
        );

        writeOn: w => w << 'a connection morph';
    };
}
