
{
    static with inherited _ = std Clonable;
    with inherited own Morph = $ Morph;

    protected text,
    protected texture;

    with inherited trait = {
        init => (
            $(Morph) init.
            text     <- No.
            texture  <- No.
          ^ self
        );

        text: txt => (
            text    <- Yes: txt.
            texture <- No.
          ^ self
        );

        baseMinWidth => (
            texture yes: [ :t | t width               ]
                     no: [      $(Morph) baseMinWidth ]
        );

        baseMinHeight => (
            texture yes: [ :t | t height               ]
                     no: [      $(Morph) baseMinHeight ]
        );

        protected reshapeToFit => (
            rigidWidth: baseMinWidth.
            rigidHeight: baseMinHeight.
          ^ self
        );

        protected getOrMakeTexture: renderer => (
            texture no: [
                text yes: [ :t | texture <- Yes: (renderer makeTextTexture: t text). reshapeToFit. layoutChanged. ]
            ].
          ^ texture
        );

        renderImplOn: renderer => (
            renderer setR: 50 G: 0 B: 0.
            renderer drawRectX: 0 Y: 0 W: width H: height.
            (getOrMakeTexture: renderer) yes: [ :t | renderer drawTexture: t W: width H: height ].
            $(Morph) renderImplOn: renderer.
        );

        handleGrabAt: point HandMorph: hand => ( hand grab: self. true );
        handleClickAt: point HandMorph: hand => (
            (std io out << 'Clicked a label at ' << point) newline commit.
          ^ true
        );

        "TODO"
    };
}
