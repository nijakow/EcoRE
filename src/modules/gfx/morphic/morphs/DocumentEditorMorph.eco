{
    static with inherited _ = std Clonable;
    with inherited own Morph = $ Morph;

    protected caret,
    protected lineCache;

    with inherited trait = {
        static with inherited _ = std Trait;

        initWithDocument: _document => (
            $(Morph) init.
            caret     <- _document newCaret.
            lineCache <- std util newVector.
            refreshLineCache.
          ^ self
        );

        document => caret document;

        refreshLineCache => (
            lineCache clear.
            (document lines) into: lineCache.
          ^ self
        );

        renderImplOn: renderer => (
            renderer setR: 128 G: 128 B: 192.

            |
                xOff <- 0,
                yOff <- 0
            |
            lineCache do: [ :line |
                | m <- 0 |
                xOff <- 0.
                line do: [ :item |
                    item ifCharacter: [ :c |
                        renderer drawChar: (c content) X: xOff Y: yOff.
                        xOff <- xOff + (renderer charWidth: (c content)).
                        m <- m max: (renderer charHeight: (c content)). 
                    ].
                    item ifReference: [ :r |
                        renderer drawRectX: (xOff + 2) Y: (yOff + 2) W: 8 H: 8.
                        xOff <- xOff + 10.
                        m <- m max: 10.
                    ].
                ].
                yOff <- yOff + m.
            ].

            $(Morph) renderImplOn: renderer.
        );

        writeOn: w => w << 'a document editor';
    };
}
