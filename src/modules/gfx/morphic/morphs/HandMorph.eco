
    {
        static with inherited _ = std Clonable;
        with inherited own Morph = $ Morph;

        protected grabbedMorph;

        with inherited trait = {
            init => (
                $(Morph) initWithOneChild.
                rigidWidth: 1.
                rigidHeight: 1.
                grabbedMorph <- No.
              ^ self
            );

            grab: morph => (
                | p <- morph globalOffset - globalOffset |
                add: morph.
                morph moveTo: p. "TODO: Keep offset"
                grabbedMorph <- Yes: morph.
              ^ self
            );

            click => (
                | gb <- globalOffset |
                grabbedMorph
                  ~ yes: [ :m | world yes: [ :w | (w dropMorph: m At: gb) -> [ grabbedMorph <- No ] ] ]
                     no: [      world yes: [ :w | (w clickAt: gb HandMorph: self) ] ]
            );

            leftClick   => click;
            middleClick => click;

            rightClick  => (
                | gb <- globalOffset |
                grabbedMorph
                  ~ yes: [ :m | world yes: [ :w | (w dropMorph: m At: globalOffset) -> [ grabbedMorph <- No ] ] ]
                     no: [      world yes: [ :w | (w grabAt: gb HandMorph: self) ] ]
            );

            renderImplOn: renderer => (
                $(Morph) renderImplOn: renderer.
                "renderer setR: 200 G: 0 B: 0.
                renderer fillRectX: 0 Y: 0 W: 1 H: 1."
            );

            dispatchEvent: block AtX: evtX Y: evtY => false; "Avoid dispatching to children"

            writeOn: w => w << 'a hand morph';
        };
    }
