{
    "
        Nodes Module
    "
    static with inherited _ = std Module;

    own NodeTrait = {
        static with inherited _ = std Trait;

        ifText: block => self;
        ifReference: block => self;
    };

    own TextNode = {
        static with inherited _ = std Clonable;
        with inherited NodeTrait = $ NodeTrait;

        content;

        initWithContent: _content => (
            content <- _content;
            ^ self
        );

        ifText: block => block value(self);
    };

    own ReferenceNode = {
        static with inherited _ = std Clonable;
        with inherited NodeTrait = $ NodeTrait;

        content;

        initWithContent: _content => (
            content <- _content;
            ^ self
        );

        ifReference: block => block value(self);
    };

    Text: text => TextNode clone initWithContent: text;
    Reference: reference => ReferenceNode clone initWithContent: reference;
}
