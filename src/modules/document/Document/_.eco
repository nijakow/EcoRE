{
    static with inherited _ = std Clonable;

    protected root;

    with inherited trait = {
        static with inherited _ = std Trait;

        init => (
            root <- mod nodes MakeCompoundSnip().
          ^ self
        );

        protected mod = {
            "
                module title Module
            "
            static with inherited _ = std Module;
        
            own nodes = (here / 'nodes.eco') importIn: self;
        };

        documentStream => root iterator;

        addSnip: snip => root <- (root appendSnip: snip);
        addText: t => addSnip: (mod nodes StringSnip: t);
        addCharacter: c => addSnip: (mod nodes ItemSnip: (mod nodes CharacterItem: c));
        addReference: r => addSnip: (mod nodes ItemSnip: (mod nodes ReferenceItem: r));
    };

    writeOn: w => w << 'a document';
}
