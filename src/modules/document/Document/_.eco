{
    static with inherited _ = std Clonable;

    root;

    with inherited trait = {
        static with inherited _ = std Trait;

        init => (
            root <- mod nodes MakeCompoundSnip().
          ^ self
        );

        root: r => root <- r;

        protected mod = {
            "
                module title Module
            "
            static with inherited _ = std Module;
        
            own nodes = (here / 'nodes.eco') importIn: self;
            own Caret = (here / 'Caret.eco') importIn: self;
        };

        documentStream => root iterator;

        newCaret => (mod Caret) new initWithDocument: self;
    };

    writeOn: w => w << 'a document';
}
