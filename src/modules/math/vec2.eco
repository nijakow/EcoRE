
{
    x, y;

    with inherited trait = {
        init => x: 0 y: 0;

        x: v => ( x <- v. self );
        y: v => ( y <- v. self );
        x: xv y: yv => ( x: xv. y: yv. self );

        assign: vec => x: vec x y: vec y;

        length => ( x * x + y * y ) sqrt;
        distanceToX: tx Y: ty => (((tx - x) * (tx - x)) + ((ty - y) * (ty - y))) sqrt;
        distanceTo: vec => distanceToX: vec x Y: vec y;

        translateByX: dx Y: dy => x: x + dx y: y + dy;
        translateBy: vec => x: x + vec x y: y + vec y;
    };

    with inherited parent = std Clonable;
}
