{
    static with inherited _ = std Module;

    LookupMethod: name InKind: kind => (
        "TODO"
      ^ No
    );

    InlineMethod: m Args: args Varargs: varargs Context: context => (
        "TODO"
    );

    RewriteAST: ast Context: context => (
        (Switch: context type)
          ~ case: astTypes Builtin do: [
              ^ ast
            ]
          ~ case: astTypes Send do: [
                |
                    kind   <- ResultTypeOfExpression: (ast receiver) Context: context,
                    method <- LookupMethod: ast message InKind: kind
                |
                method yes: [ :m | ^ InlineMethod: m Args: ast args Varargs: ast varargs Context: context ]
                        no: [      ^ ast                                                                  ]
            ]
          ~ default: [ ^ ast ]
    );


    Rewrite: ast Context: context => (

    );

    Rewrite: ast => Rewrite: ast Context: newContext;
}