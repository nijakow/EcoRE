
{
    static with inherited _ = std Module;
    protected module = $;

    protected with switch = $ switch;

    protected astTypes => module ast types;
    protected constraints => module constraints;
    
    ConstraintsFor: ast Context: context => (
        (Switch: ast type)
          ~ case: astTypes Constant do: [ ^ constraints Constant: ast Context: context                         ]
          ~ case: astTypes Code     do: [ ^ constraints Constant: ast Context: context                         ]
          ~ case: astTypes Register do: [ ^ context lexical: (ast depth) ~ register: (ast index) ~ constraints ]
          ~ case: astTypes Scope    do: [ ^ ConstraintsFor: (ast body) Context: (ast context)                  ]  "TODO: Maybe wrap context?"
          ~ default: [ ^ constraints Unknown ]
        ~ end
    );
}
