
{
    static with inherited _ = std Module;
    optimizer = $;

    ast = $ ast;
    builder => ast builder;

    with own switch = (here / 'switch.eco') importIn: self;

    own constraints = (here / 'constraints.eco') importIn: self;
    own context = (here / 'context.eco') importIn: self;
    own calc = (here / 'calc.eco') importIn: self;
    own transform = (here / 'transform' / '_.eco') importIn: self;
    own elimination = (here / 'elimination' / '_.eco') importIn: self;

    protected Rewrite: ast Using: component => (
      ^ component Rewrite: ast Context: context NewContext
    );

    "Rewrite: ast => Rewrite: ast Using: transform;"
    Rewrite: ast => Rewrite: ast Using: elimination;
}
