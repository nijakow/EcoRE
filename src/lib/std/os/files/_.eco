
#=std/os/files: {
    static with inherited _ = #<:std/Module>;

    ListFiles: path => #'ecosphere.ecore.io.list_files'(path);

    own SharedPathTrait = #=std/os/files/SharedPathTrait: {
        exists => #'ecosphere.ecore.io.file_exists'(path);
        isDirectory => #'ecosphere.ecore.io.file_is_directory'(path);
        / name => (
            (name equals: '') -> [ ^ self ].
            (name equals: '.') -> [ ^ self ].
            (name equals: '..') -> [ ^ parent yes ].
          ^ (module Path) clone initWithName: name
                                        Path: path + '/' + name
                                      Parent: self.
        );
        children => (((module ListFiles: path) iterator map: [ :file | child: file ]) into: (std util newVector)) asArray;
        openForReading => io OpenFileForReading: path;
        import => io Import: path;
        writeOn: w => w << 'a path(\'' << path << '\')';
    };

    own root = {
        static with inherited _ = #<:std/Singleton>;
        with inherited sharedTrait = #<std/os/files/SharedPathTrait>;
        private module = #<:std/os/files>;

        parent => No; "TODO"
        name => '/';
        path => '/';
        / name => (module Path) clone initWithName: name Path: '/' + name Parent: self;
    };

    here => (std os env Lookup: 'PWD')
                yes: [ :p | Path: p ]
                 no: [ ^ root ];

    Path: fullpath => (
        | path <- root |
        (fullpath splitOnChar: #\/) do: [ :sub | path <- path / sub ].
      ^ path
    );

    own Path = {
        static with inherited _ = #<:std/Clonable>;
        with inherited sharedTrait = #<std/os/files/SharedPathTrait>;
        private module = #<:std/os/files>;

        parent,
        name,
        path;

        with inherited trait = {
            initWithName: _name Path: _path Parent: _parent => (
                parent <- Yes: _parent.
                name   <- _name.
                path   <- _path.
              ^ self
            );

            init => (
                "Initializes a pointer to root"
                parent <- No.
                name   <- '/'.
                path   <- '/'.
              ^ self
            );
        };
    },
}
