
#=std/io/PortOutput: {
    _port;

    with inherited trait = {
        init: port => (
            _port <- port.
            ^ self
        );

        commit     => _port commit;
        byte<< b   => _port byte<< b;
        << object  => (
            ((std reflect PublicInterfaceFor: object) implementsMessage: #'writeOn:')
                  if: [ object writeOn: self ]
                else: [ << 'an object' ].
          ^ self
        );
        newline    => ( self << (char newline). ^ self );
        close      => _port close;

        writeOn: w => w << 'PortOutput';
    };

    with inherited parent = #<:std/Clonable>;
}
