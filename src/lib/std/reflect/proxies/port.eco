
#=std/reflect/proxies/Port: {
    hasNext => #'ecosphere.ecore.object.port.at_eof'(self itself) not;
    readByte => (
        | b <- #'ecosphere.ecore.object.port.read_byte'(self itself) |
        [ b asBool ] until: [
            #'ecosphere.ecore.object.port.notify_me'(self itself).
            b <- #'ecosphere.ecore.object.port.read_byte'(self itself)
        ].
      ^ b
    );

    writeByte: b => (#'ecosphere.ecore.object.port.write_byte'(self itself, b itself). ^ self);
    byte<< b     => writeByte: b;

    commit => #'ecosphere.ecore.object.port.flush_output'(self);

    with inherited parent = #<:std/Clonable>;
}
