"
    base.eco - The Base Library
"

#=base/block_family: {
    execute(...)  => #'ecosphere.ecore.flow.value'(self, ...).
    repeat        => ( self execute. #'ecosphere.ecore.flow.reset'() ).
    whileTrue: b  => ( (self execute) ifFalse: [ ^ nil ]. #'ecosphere.ecore.flow.reset'() ).
    untilTrue: b  => ( (self execute) ifTrue:  [ ^ nil ]. #'ecosphere.ecore.flow.reset'() ).
    whileFalse: b => untilTrue: b.
    untilFalse: b => whileTrue: b.
},

{
    Object = {
        with trait = #=base/shared_behavior: {
        }.
    },

    Oddball = {
        with* parent = Object;
    },

    true = {
        with* parent = Oddball;

        ifTrue:  b => b execute.
        ifFalse: b => nil.
        ifTrue:  t
        ifFalse: f => t execute.
        isNil      => false.
    },

    false = {
        with* parent = Oddball;

        ifTrue:  b => nil.
        ifFalse: b => b execute.
        ifTrue:  t
        ifFalse: f => f execute.
        isNil      => false.
    },

    nil = {
        with* parent = Oddball;

        isNil => true.
    }
}
