"
    base.eco - The Base Library
"

#=base/block_family: {
    value(...)    => #'ecosphere.ecore.flow.value'(self, ...).
    repeat        => ( self value. #'ecosphere.ecore.flow.reset'() ).
    whileTrue: b  => ( (self value) ifFalse: [ ^ nil ]. b value. #'ecosphere.ecore.flow.reset'() ).
    untilTrue: b  => ( (self value) ifTrue:  [ ^ nil ]. b value. #'ecosphere.ecore.flow.reset'() ).
    whileFalse: b => untilTrue: b.
    untilFalse: b => whileTrue: b.
},

{
    Object = #=base/object: {
        with lobby = #<:lobby@master.eco>.
        with trait = #=base/shared_behavior: {
        }.
    },

    Oddball = #=base/oddball: {
        with* parent = #<:base/object>;
    },

    true = {
        with* parent = #<:base/oddball>;

        ifTrue:  b => b value.
        ifFalse: b => nil.
        ifTrue:  t
        ifFalse: f => t value.
        isNil      => false.
    },

    false = {
        with* parent = #<:base/oddball>;

        ifTrue:  b => nil.
        ifFalse: b => b value.
        ifTrue:  t
        ifFalse: f => f value.
        isNil      => false.
    },

    nil = {
        with* parent = #<:base/oddball>;

        isNil => true.
    }
}
