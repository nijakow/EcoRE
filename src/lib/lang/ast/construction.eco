
#=lang/ast/ASTConstruction: {
  ast = #<:lang/ast>;

  newASTSelf => (ast ASTSelf) new;

  newASTConstantWithValue: value => "TODO";
  newASTArrayWithExpressions: exprs => "TODO";
  newASTInterfaceBuilder => "TODO";
  newASTObjectBuilder => "TODO";

  newASTBuiltinWithName: name Args: args HasVarargs: varargs => (ASTBuiltin new) initWithName: name Args: args Varargs: varargs;

  newASTCallWithSubject: subject Args: args HasVarargs: varargs => (ASTCall new) initWithSubject: subject Args: args Varargs: varargs;

  newASTSendWithSubject: subject Message: msg Args: args HasVarargs: varargs => (ASTSend new) initWithSubject: subject Message: message Args: args Varargs: varargs;

  newASTAssignmentWithLHS: lhs RHS: rhs => (ASTAssignment new) initWithLHS: lhs RHS: rhs;

  newASTBarWithType: type Var: var Value: value Followup: followup => (ASTVariableDeclaration new) initWithType: type Name: var Value: value Followup: followup;

  newASTCompoundWithInstructions: instructions => (ASTCompound new) initWithExprs: instructions;

  newASTBlockWithArgs: args Varargs: varargs Body: body => (ASTBlock new) initWithArgs: args Varargs: varargs Body: body;

  newASTReturnWithValue: value => (ASTReturn new) initWithValue: value;

  newASTAsWithLHS: lhs RHS: rhs => (ASTAs new) initWithLHS: lhs RHS: rhs;
}
