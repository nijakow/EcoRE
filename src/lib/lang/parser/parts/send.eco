
#=lang/parser/Parser/Send: {
    tryParseNArySendWithAST: ast => (
        ( | ident <- checkNAryIdentifier |
            ident if: [
                |
                    nameStr <- '',
                    arglist <- std util newVector
                |

                [
                    nameStr <- nameStr + (ident payload asString).
                    arglist append: (parseExpressionWithFollowups: false).
                    ident <- checkNAryIdentifier.
                    ident unless: [
                      ^ newASTSendWithSubject: ast
                                      Message: nameStr asKey
                                         Args: arglist
                                   HasVarargs: false
                    ]
                ] repeat
            ]
        ).
      ^ ast
    );

    parseSendWithAST: ast Followups: followups => (
        ( | ident <- checkUnaryIdentifier |
            ident if: [
                | arglist <- parseOptionalArglist |
              ^ newASTSendWithSubject: ast
                              Message: ident payload
                                 Args: arglist first
                           HasVarargs: arglist second
            ]
        ).

        followups unless: [ ^ ast ].

        ( | ident <- checkBinaryIdentifier |
            ident if: [
                | args <- std util newVector |
                args append: (parseExpressionWithFollowups: false).
              ^ newASTSendWithSubject: ast
                              Message: ident payload
                                 Args: args
                           HasVarargs: false
            ]
        ).

      ^ tryParseNArySendWithAST: ast
    );
}
