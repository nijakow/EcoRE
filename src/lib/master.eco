"
    master.eco - The Master Object
"

#=lobby: {
    meta = {
        name    => 'Ecosphere Standard Library',
        version => '0.1',
        author  => 'nijakow'
    };

    with packages = {
        with std = #<:@std/std.eco>;
    };
},

#=bootstrapper: {

    Init => (
        #'ecosphere.ecore.init.set_lobby'(#<:lobby>).
        #'ecosphere.ecore.init.set_true'(#<:std/bool/true@std/std.eco>).
        #'ecosphere.ecore.init.set_false'(#<:std/bool/false@std/std.eco>).
        #'ecosphere.ecore.init.set_proxy'(#'ecosphere.ecore.constant.integer_type'(), #<:init/integer_proxy@init.eco>).
        #'ecosphere.ecore.init.set_proxy'(#'ecosphere.ecore.constant.character_type'(), #<:init/character_proxy@init.eco>).
        #'ecosphere.ecore.init.set_proxy'(#'ecosphere.ecore.constant.block_type'(), #<:init/block_proxy@init.eco>).
        #'ecosphere.ecore.init.set_proxy'(#'ecosphere.ecore.constant.key_type'(), #<:init/key_proxy@init.eco>).
        #'ecosphere.ecore.init.set_proxy'(#'ecosphere.ecore.constant.string_type'(), #<:init/string_proxy@init.eco>).
        #'ecosphere.ecore.init.set_proxy'(#'ecosphere.ecore.constant.vector_type'(), #<:init/vector_proxy@init.eco>).
        #'ecosphere.ecore.init.set_proxy'(#'ecosphere.ecore.constant.port_type'(), #<:init/port_proxy@init.eco>).

        | d <- {
            with inherited trait = {
                sayhi => lensed << 'hi';
                init: other => ( lensed <- other; ^ self);
            };

            with lensed;
            with inherited parent = #<:std/Clonable@std/std.eco>;
        } |

        | p <- #'ecosphere.ecore.object.port.new'(1), q <- p lens: d |

        p << -4274995;
        p << '\e[6m\e[31mHello, ' << 'world!\e[0m';
        p newline.
        p << #'hello'.
        p newline.
        p << #\ðŸ“¦.
        p flush.
        q << 'Hey!!!'. q flush.
        [
            p << '> '. p flush.
            (p readLine) do: [ :c | p << c ].
            p newline.
        ] repeat.
    );

    with parent = #<:lobby>;
},

#<:bootstrapper> Init.
